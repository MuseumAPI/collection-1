Collections objects as JSON files
============

This folder contains the all the objects in the Cooper-Hewitt collection
database exported as individual [JSON](http://www.json.org/) files. They were
created using the
[export_objects.py](https://github.com/straup/collection/blob/master/bin/export_objects.py)
script and the
[add_media.py](https://github.com/straup/collection/blob/master/bin/add_media.py),
both included with this repository.

File names and parent directory structures are generated using the unique ID of
the object itself. For example the full path for Piancastelli's "Ceres asks
Jupiter for Return of Proserpina" (ID #10001) is: [objects/100/01/10001.json](https://github.com/straup/collection/blob/master/objects/100/01/10001.json)

Paths are generated by chopping numeric identifiers in to groups of three (or
less) starting front to back. A reference implementation can be found in the
[utils.py](https://github.com/straup/collection/blob/master/bin/utils.py)
library.

Objects as JSON files (in Git(Hub))
============

It should be noted that the performance of Git (and GitHub) when dealing with
very large repositories is still less than ideal. It appears to be a problem
inherent to Git and its indexing processes.

Which is to say: Everything still works but it can be slow. In practice this has
the side-effect of making some features of GitHub, like pull requests, nearly
impossible because the web application is configured to time out before indexing
(of a very large repository) has completed.

There is a good thread about the problem and some potential solutions over here:

http://thread.gmane.org/gmane.comp.version-control.git/189776
